server:
  port: 7890
  undertow:
    accesslog:
      dir: undertow-log
      enabled: false
      pattern: common
      prefix: access_log
      suffix: .log
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    direct-buffers: true
    # HTTP POST请求最大的大小
    max-http-post-size: 0

com:
  example:
    blog:
      name: name in dev

spring:
  freemarker:
    cache: false
    charset: utf-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    request-context-attribute: request
    suffix: .html

  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  datasource:
    url: jdbc:postgresql://127.0.0.1:6543/my_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

    druid:
      initial-size: 5
      max-active: 20
      min-idle: 5
      max-wait: 60000

      #监控页相对路径 druid
      stat-view-servlet:
        login-username: mmc
        login-password: 123456

  jpa:
    properties:
      hibernate:
        temp:
          #解决spring boot的这个报错信息：这个 org.postgresql.jdbc.PgConnection.createClob() 方法尚未被实作。
          use_jdbc_metadata_defaults: false
    open-in-view: false

logging:
  file: logs/log.log
  pattern:
    file: '%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n'
  level:
    com.mmc.springbootdemo: DEBUG

pagehelper:
  helper-dialect: postgresql